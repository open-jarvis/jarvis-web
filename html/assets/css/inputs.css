/*  BUTTONS, INPUTS, TEXTAREAS AND OTHER CLICKABLE AND INPUTABLE THINGS  */


/*  buttons, inputs, textareas, all the things that are clickable and inputable  */

button,
input,
textarea,
select,
.button {
    border: 2px solid var(--border-color);
    border-radius: var(--border-radius);
    background-color: var(--lighter-grey);
    padding: var(--padding);
    font-size: 1rem;
}

button,
input,
.button {
    transition: var(--transition);
}

button,
select,
.button {
    cursor: pointer;
}

button:disabled {
    opacity: .2;
    cursor: not-allowed;
}

button:hover {
    background-color: var(--grey);
}


/* colorized buttons and inputs */

button.red,
.button.red {
    border-color: var(--red);
}

button.red:hover,
.button.red:hover {
    background-color: var(--red);
    color: #fff;
}

button.green,
.button.green {
    border-color: var(--green);
}

button.green:hover,
.button.green:hover {
    background-color: var(--green);
    color: #fff;
}

button.blue,
.button.blue {
    border-color: var(--blue);
}

button.blue:hover,
.button.blue:hover {
    background-color: var(--blue);
    color: #fff;
}

button.orange,
.button.orange {
    border-color: var(--orange);
}

button.orange:hover,
.button.orange:hover {
    background-color: var(--orange);
    color: #fff;
}

input:focus,
textarea:focus {
    border-color: var(--input-border-on-focus);
}

input[type=checkbox]+label,
input[type=radio]+label {
    cursor: pointer;
    margin-left: 15px;
}

input[type=range] {
    padding: 0;
    width: 100px;
}

input[type=range]+label {
    margin-left: 15px;
}

input[type=checkbox],
input[type=radio] {
    --active: var(--blue);
    --disabled: var(--grey);
    height: 18px;
    width: 18px;
    padding: 10px;
    cursor: pointer;
    outline: none;
    position: relative;
    border: 2px solid var(--grey);
    background-color: #fff;
    -webkit-appearance: none;
    -moz-appearance: none;
}

input[type=checkbox]:after,
input[type=radio]:after {
    content: "";
    display: block;
    left: 0;
    top: 0;
    position: absolute;
}

input[type=checkbox]:checked,
input[type=radio]:checked {
    background: var(--active);
    border-color: var(--active);
}

input[type=checkbox]:disabled,
input[type=radio]:disabled {
    cursor: not-allowed;
    opacity: 0.9;
    background: var(--disabled);
}

input[type=checkbox]:not(.switch):after,
input[type=radio]:not(.switch):after {
    opacity: 0;
}

input[type=checkbox]:not(.switch):checked:after,
input[type=radio]:not(.switch):checked:after {
    opacity: 1;
}

input[type=checkbox]:not(.switch) {
    border-radius: 6px;
}

input[type=checkbox]:not(.switch):after {
    width: 5px;
    height: 10px;
    border: 3px solid #fff;
    border-top: 0;
    border-left: 0;
    left: 6px;
    top: 2px;
    transform: rotate(30deg);
    border-radius: 1px;
}

input[type=checkbox]:not(.switch):checked:after {
    transform: rotate(43deg);
}

input[type=checkbox].switch {
    width: 4rem;
    border-radius: 9999rem;
    height: 1.75rem;
    border-color: var(--grey) !important;
    background: #fff;
}

input[type=checkbox].switch:checked {
    background: var(--green);
}

input[type=checkbox].switch:after {
    left: -0.2rem;
    top: -0.25rem;
    border-radius: 50%;
    width: 2rem;
    height: 2rem;
    background: #fff;
    transition: var(--transition);
    box-shadow: var(--box-shadow-level-3);
}

input[type=checkbox].switch:hover:not(:checked)::after,
input[type=radio].switch:hover:not(:checked)::after {
    transition: var(--transition);
    /* background-color: var(--input-border-hover); */
}

input[type=checkbox].switch:checked:after {
    background: #fff;
    transform: translate(2.25rem);
}

input[type=checkbox].switch:disabled:not(:checked):after {
    opacity: 0.6;
}

input[type=radio] {
    border-radius: 50%;
}

input[type=radio]:after {
    width: 17px;
    height: 17px;
    border-radius: 50%;
    background: var(--active-inner);
    opacity: 0;
    transform: scale(0.7);
}

input[type=radio]:checked:after {
    background: var(--active-inner);
    transform: scale(0.5);
}

input:focus+span,
input:not(:placeholder-shown)+span {
    opacity: 1;
    transform: scale(0.75) translateY(-100%) translateX(-30px);
}


/* Input Eye */

i[data-visibilityfor] {
    cursor: pointer;
    transform: translate(-2.5rem);
    position: absolute;
    right: -1.5rem;
}


/* For IE Browsers*/

div.input {
    margin: 0 0 15px;
    position: relative;
    display: flex;
    align-items: center;
    position: relative;
}

div.input>span {
    padding: 0.85rem;
    pointer-events: none;
    position: absolute;
    left: 0;
    top: 0;
    transition: 0.15s;
    transition-timing-function: ease-out;
    opacity: 0.5;
    line-height: 1.1rem;
    color: var(--darker-grey);
}

div.input>input,
div.input>textarea {
    padding: 10px;
    width: 100%;
}

div.input>input:focus+span,
div.input>textarea:focus+span,
div.input>input:not(:placeholder-shown)+span,
div.input>textarea:not(:placeholder-shown)+span {
    opacity: 1;
    transform: scale(0.75) translateY(-125%) translateX(-15%);
    padding: 0;
}


/* For IE Browsers*/

div.input>input:focus+span,
div.input>textarea:focus+span,
div.input>input:not(:-ms-input-placeholder)+span,
div.input>textarea:not(:-ms-input-placeholder)+span {
    opacity: 1;
    transform: scale(0.75) translateY(-100%) translateX(-15%);
}

textarea.no-resize  {  resize: none;                            }
textarea.resize     {  resize: both;                            }
textarea.h-resize   {  resize: horizontal;  min-width: 300px;   }
textarea.v-resize   {  resize: vertical;    min-height: 70px;   }

div.input.file>input[type=file] {
    opacity: 0;
    position: fixed;
    z-index: -1;
    left: -10000px;
    top: -10000px;
    width: 0.1px;
    height: 0.1px;
}

div.input.file>label {
    cursor: pointer;
    text-align: center;
}

.checkbox-sides {
    display: flex;
    align-items: center;
    /* justify-content; */
    /* width: 75%; */
}

.chooser {
    --image-size: 30px;
    --margin: 4px;
    display: grid;
    grid-template-areas: "current_item all_items";
    grid-template-columns: var(--image-size) 1fr;
    grid-gap: 1rem;
    position: relative;
}

.chooser>.current {
    grid-area: current_item;
    width: var(--image-size);
    height: var(--image-size);
    margin-top: 10px;
}

.chooser>.search {
    grid-area: all_items;
    transition: .2s;
    height: 200px;
    overflow-y: auto;
    position: relative;
}

.chooser>.search>.input {
    margin-top: 10px;
}

.chooser>.search div div {
    margin: var(--margin);
}

.chooser>.search img {
    width: var(--image-size);
    height: var(--image-size);
}

.chooser>.colors {
    position: absolute;
    right: -30px;
    top: 0;
    display: flex;
    flex-direction: column;
}

.chooser>.colors>div {
    width: 25px;
    height: 25px;
    margin-bottom: 2px;
    padding: 0;
    cursor: pointer;
}

.chooser>.search>.icons>div>div {
    cursor: pointer;
}



/*  ALERTS  */
#prompt {
    transition: var(--transition);
    z-index: 9999999 !important;
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    background-color: rgba(0, 0, 0, 0.5);
    animation: opacity .2s forwards;
}
#prompt-inner {
    z-index: 99999999 !important;
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    margin: auto;
    width: 400px;
    height: fit-content;
    background-color: var(--lighter-grey);
    animation: opacity .2s forwards;
    border-radius: var(--border-radius);
    padding: 30px 40px 90px 40px;
}

#prompt.hidden {
    animation: opacity-reverse .2s forwards;
}

#prompt-inner .buttons {
    position: absolute;
    right: 20px;
    bottom: 20px;
}

#prompt-inner .header {
    font-size: 1.5rem;
    margin: 0;
}

#prompt-inner .content {
    font-size: 1rem;
    margin-top: 20px;
    display: block;
}

@keyframes opacity {
    0%   {  opacity: 0;  }
    100% {  opacity: 1;  }
}
@keyframes opacity-reverse {
    0%   {  opacity: 1;  }
    100% {  opacity: 0;  }
}